ในภาษา Go เราใช้ชนิดข้อมูล (Data Types) เพื่อระบุประเภทของข้อมูล
ที่ตัวแปรสามารถเก็บได้ เช่น
var age int
ที่นี่ int เป็นชนิดข้อมูลที่ระบุว่าตัวแปร age สามารถเก็บข้อมูลจำนวนเต็มได้

ดูตารางได้ที่ไฟล์ ตารางชนิดข้อมูลพื้นฐาน (Data Types)
------------------------------------------------------------------
1.ประเภทข้อมูลจำนวนเต็ม (Integer Data Type) ใช้สำหรับเก็บตัวเลขจำนวนเต็ม
ที่สามารถเป็นศูนย์ ค่าบวกหรือค่าลบได้ แต่ไม่มีทศนิยม เช่น 0, 5, -1340
ในการประกาศตัวแปรจำนวนเต็ม เรามักใช้คีย์เวิร์ด int เช่น

var id int

ในที่นี้ id เป็นตัวแปรประเภทจำนวนเต็ม นอกจากนี้เรายังสามารถประกาศ
ตัวแปรหลายตัวในบรรทัดเดียวกันได้เช่น
var id, age int

ในภาษา Go มีชนิดของจำนวนเต็มสองแบบ:
signed integer (int): สามารถเก็บได้ทั้งค่าบวกและค่าลบ
unsigned integer (uint): สามารถเก็บได้เฉพาะค่าบวกเท่านั้น

ดูตารางได้ที่ไฟล์ ตารางการเขียนจำนวนเต็ม.png

หมายเหตุ: โดยปกติแล้ว หากไม่มีความต้องการเฉพาะเจาะจง เรามักจะใช้
คีย์เวิร์ด int ในการสร้างตัวแปรจำนวนเต็ม
--------------------------------------------------------------
2.ประเภทข้อมูล Float
ประเภทข้อมูล float ใช้สำหรับเก็บค่าที่มีจุดทศนิยม เช่น 6.7, -34.2
คำสำคัญที่ใช้: float32, float64

ตัวอย่างการประกาศตัวแปร float:
var salary float64
ในที่นี้ salary เป็นตัวแปรประเภท float64 ซึ่งสามารถเก็บค่าทศนิยมได้

ดูตารางได้ที่ไฟล์ ตารางขนาดของข้อมูลประเภท Floating-point.png

หมายเหตุ: หากเรากำหนดตัวแปร float โดยระบุขนาดอย่างชัดเจน
ขนาดของตัวแปรจะเป็น 64 บิต เช่น

// ขนาดของตัวแปรคือ 64
salary := 5676.3

ในตัวอย่างนี้ ตัวแปร salary จะใช้พื้นที่ 64 บิตในหน่วยความจำโดย
อัตโนมัติ เพราะเราไม่ได้กำหนดขนาดไว้
-----------------------------------------------------------------
3.ประเภทข้อมูล String
String คือ ลำดับของอักขระ เช่น "hello", "Hey there"
ใน Go เราสามารถสร้าง string ได้โดยใช้เครื่องหมายอัญประกาศคู่ (double quote)
หรือ backticks
ตัวอย่าง:
var message string = "Hello World!"
var message string = `Hello World!`
เมื่อใช้เครื่องหมายอัญประกาศคู่ จะสามารถใช้ escape sequence ได้ เช่น 
\n (ขึ้นบรรทัดใหม่)
เมื่อใช้ backticks ทุกตัวอักษรจะถูกแสดงผลตามที่พิมพ์
-----------------------------------------------------------------
4.ประเภทข้อมูล Boolean
ข้อมูลประเภท Boolean ในภาษา Go มีค่าได้เพียง 2 ค่า คือ true หรือ false

Keyword: bool

ตัวอย่างการประกาศตัวแปรประเภท Boolean:

var isValid bool

คำอธิบาย: ตัวแปร isValid ที่ประกาศในตัวอย่างนี้เป็นตัวแปรประเภท
Boolean ที่สามารถเก็บได้เฉพาะค่าจริง (true) หรือค่าเท็จ (false) เท่านั้น
---------------------------------------------------------------------------------
ในภาษา Go เราใช้ตัวดำเนินการเชิงสัมพันธ์ (Relational Operator) เพื่อ
เปรียบเทียบค่าหรือตัวแปรสองตัวอย่าง เช่น

number1 := 9
number2 := 3

result := number1 > number2

ในตัวอย่างนี้ > เป็นตัวดำเนินการเชิงสัมพันธ์ ซึ่งจะเปรียบเทียบว่าค่า
number1 มากกว่า number2 หรือไม่ โดยผลลัพธ์จะถูกเก็บในตัวแปร
result ซึ่งจะมีค่าเป็น true หรือ false ขึ้นอยู่กับผลการเปรียบเทียบ

ตัวดำเนินการเชิงสัมพันธ์ (Relational Operator) ใช้ค่าบูลีน (true และ
false) ในการตรวจสอบความถูกต้องของการเปรียบเทียบ โดยผลลัพธ์ที่ได้
จะเป็น:

true: หากการเปรียบเทียบระหว่างตัวดำเนินการถูกต้อง
false: หากการเปรียบเทียบระหว่างตัวดำเนินการไม่ถูกต้อง

เช่น เมื่อเปรียบเทียบค่า number1 > number2 หาก number1 มากกว่า
number2 ผลลัพธ์จะเป็น true แต่หากไม่มากกว่า ผลลัพธ์จะเป็น false

ดูตารางได้ที่ไฟล์ ตัวดำเนินการเชิงสัมพันธ์ (Relational Operators).png
---------------------------------------------------------------------------------
5.ตัวดำเนินการเชิงตรรกะ (Logical Operators)
ตัวดำเนินการเชิงตรรกะใน Go จะส่งคืนค่าเป็น true หรือ false ขึ้นอยู่กับเงื่อนไขที่กำหนด

ดูตารางได้ที่ไฟล์ ตารางแสดงตัวดำเนินการเชิงตรรกะ (Logical Operators).png
---------------------------------------------------------------------------------
6.นิพจน์บูลีน (Boolean Expression)
ในโปรแกรมมิ่ง นิพจน์ที่คืนค่าเป็นค่าบูลีน (true หรือ false) จะถูกเรียกว่า
นิพจน์บูลีน (Boolean Expression)
ตัวอย่าง:

var number1 int = 5
var number2 int = 8

result := number1 > number2

ในกรณีนี้ number1 > number2 เป็นนิพจน์บูลีนที่คืนค่า false เพราะ 5 ไม่มากกว่า 8

ทำไมถึงใช้นิพจน์บูลีน?
นิพจน์บูลีนถูกใช้เพื่อสร้างโปรแกรมที่ช่วยตัดสินใจ เช่น หากเราต้องการสร้างโปรแกรม
ที่ตรวจสอบว่าบุคคลนั้นสามารถลงคะแนนเสียงได้หรือไม่ เราสามารถใช้นิพจน์บูลีนเพื่อตรวจสอบ
อายุของบุคคลนั้นว่าอายุมากกว่า 18 หรือไม่ หากเป็นจริง บุคคลนั้นจะสามารถลงคะแนนเสียงได้
แต่ถ้าไม่ใช่ บุคคลนั้นจะไม่สามารถลงคะแนนเสียงได้
